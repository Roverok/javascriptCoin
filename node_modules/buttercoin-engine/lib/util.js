// Generated by CoffeeScript 1.6.3
(function() {
  var map_queue, queue_to_list, serialize;

  map_queue = function(queue, f) {
    var cur, d, result;
    if (queue.constructor.name !== 'Dequeue') {
      return queue;
    }
    cur = queue.head.next;
    result = [];
    while (cur !== queue.tail) {
      d = cur.data;
      cur = cur.next;
      result.push(f(d));
    }
    return result;
  };

  module.exports.map_queue = map_queue;

  queue_to_list = function(queue) {
    return map_queue(queue, function(x) {
      return x;
    });
  };

  module.exports.queue_to_list = queue_to_list;

  serialize = function(obj) {
    var k, result, v, x, _ref;
    if (!obj) {
      return obj;
    }
    if ((_ref = obj.constructor.name) === 'String' || _ref === 'Number' || _ref === 'Boolean') {
      return obj;
    }
    if (obj.constructor.name === 'Array') {
      return (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = obj.length; _i < _len; _i++) {
          x = obj[_i];
          _results.push(serialize(x));
        }
        return _results;
      })();
    }
    if (obj.constructor.name === 'Dequeue') {
      return serialize(queue_to_list(obj));
    }
    if (obj.create_snapshot instanceof Function) {
      return obj.create_snapshot();
    }
    result = {};
    for (k in obj) {
      v = obj[k];
      if (!(v instanceof Function)) {
        result[k] = serialize(v);
      }
    }
    return result;
  };

  module.exports.serialize = serialize;

}).call(this);
