// Generated by CoffeeScript 1.6.3
(function() {
  var Connection, EventEmitter, Initiator, Q, enkihelpers, initiator, stump,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  stump = require('stump');

  enkihelpers = require('enkihelpers');

  EventEmitter = require('chained-emitter').EventEmitter;

  Q = require('q');

  Connection = require('./ws_connection');

  module.exports = Initiator = (function(_super) {
    __extends(Initiator, _super);

    function Initiator(options, parent) {
      this.options = options;
      this.parent = parent;
      this.execute_operation = __bind(this.execute_operation, this);
      this.connect = __bind(this.connect, this);
      if (!this.parent) {
        stump.stumpify(this, this.constructor.name);
      } else {
        this.parent.stumpify(this, this.constructor.name);
      }
      this.operation_tracker = {};
    }

    Initiator.prototype.connect = function() {
      var promise;
      this.connection = new Connection(this);
      if (this.options.protocol) {
        promise = this.options.protocol.start(this.connection);
      } else {
        throw Error("No Protocol in Initiator");
      }
      this.connection.connect(this.options.wsconfig);
      return promise;
    };

    Initiator.prototype.execute_operation = function(_operation) {
      return this.options.protocol.execute_operation(_operation);
    };

    return Initiator;

  })(EventEmitter);

  if (!module.parent) {
    initiator = new Initiator({
      wsconfig: 'ws://localhost:6150/'
    });
    initiator.connect();
  }

}).call(this);
